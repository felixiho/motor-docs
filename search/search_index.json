{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Technical Documentation This is the official technical documentation of the Guinea Insurance Third Party Motor Insurance . Any Developer looking to contribute to this project is expected to THOROULY READ THIS BRIEF DOCUMENTATION first. If he/she makes any contribution towards the project, they are expected to update this documentation before lauching. Tools and Packages PHP 7 Laravel 5.7 Javascript/J-Query Spatie - Laravel Roles and Permissions . Getting Started To get started on the project, strictly follow the following steps: Clone Repository/Pull latest version of the repository Run composer install If you don't have a .env file already, Do cp .env.example .env Configure .env file as well as the files in the config folder to suite your needs If you already have a database table, drop all the tables in the database else create a database for the project with name motorthirdpary Run php artisan migrate Run php artisan guinea:setup-roles-and-permissions Run composer dump-autoload Run php artisan db:seed Do php artisan cache:forget spatie.permission.cache to clear permissions cache whenever you make changes in the permissions and roles tables in the database. Project layout The project follows the conventional Laravel layout with the following styles: All admin controllers and views are in Controllers/Admin and views/admin (except the auth files which are in the controller and views root of both). All agent controllers and views are in Controllers root folder and views/user folder. The list of roles and permissions are located in app/Guinea Before You Contribute We are targetting older browsers and as such all Javascript written should be carefully checked for Backwards compatibility with browsers as far as IE 8. If however such JS is to be used, a suitable polyfill should be written. Proper consideration and care should be taken before editing or deleting someone else's code. Follow the style of variable declaration already existing and only install non-buggy composer dependencies. Creating a New Agent or Admin The process uses the Admin/AddNew controller to perform this act. The view is in the admin/addnew.blade.php file. The controller uses a substantial amount of JS files to perform some of its searching and filtering. Pagination is done using jquery datatables Deleting, Activation and Deactivation of Agents or Admins This also uses the Admin/AddNew controller to perform its action. For deleting, all user details are removed permanently. The toggleOnlineStatus merely toggles the value in the column flagged which is in the users table. This is used for preventing users who are flagged from performing transactions on the portal. Searching For Agent or User This functionality uses jquery to perform its actions.","title":"Technical Documentation"},{"location":"#technical-documentation","text":"This is the official technical documentation of the Guinea Insurance Third Party Motor Insurance . Any Developer looking to contribute to this project is expected to THOROULY READ THIS BRIEF DOCUMENTATION first. If he/she makes any contribution towards the project, they are expected to update this documentation before lauching.","title":"Technical Documentation"},{"location":"#tools-and-packages","text":"PHP 7 Laravel 5.7 Javascript/J-Query Spatie - Laravel Roles and Permissions .","title":"Tools and Packages"},{"location":"#getting-started","text":"To get started on the project, strictly follow the following steps: Clone Repository/Pull latest version of the repository Run composer install If you don't have a .env file already, Do cp .env.example .env Configure .env file as well as the files in the config folder to suite your needs If you already have a database table, drop all the tables in the database else create a database for the project with name motorthirdpary Run php artisan migrate Run php artisan guinea:setup-roles-and-permissions Run composer dump-autoload Run php artisan db:seed Do php artisan cache:forget spatie.permission.cache to clear permissions cache whenever you make changes in the permissions and roles tables in the database.","title":"Getting Started"},{"location":"#project-layout","text":"The project follows the conventional Laravel layout with the following styles: All admin controllers and views are in Controllers/Admin and views/admin (except the auth files which are in the controller and views root of both). All agent controllers and views are in Controllers root folder and views/user folder. The list of roles and permissions are located in app/Guinea","title":"Project layout"},{"location":"#before-you-contribute","text":"We are targetting older browsers and as such all Javascript written should be carefully checked for Backwards compatibility with browsers as far as IE 8. If however such JS is to be used, a suitable polyfill should be written. Proper consideration and care should be taken before editing or deleting someone else's code. Follow the style of variable declaration already existing and only install non-buggy composer dependencies.","title":"Before You Contribute"},{"location":"#creating-a-new-agent-or-admin","text":"The process uses the Admin/AddNew controller to perform this act. The view is in the admin/addnew.blade.php file. The controller uses a substantial amount of JS files to perform some of its searching and filtering. Pagination is done using jquery datatables","title":"Creating a New Agent or Admin"},{"location":"#deleting-activation-and-deactivation-of-agents-or-admins","text":"This also uses the Admin/AddNew controller to perform its action. For deleting, all user details are removed permanently. The toggleOnlineStatus merely toggles the value in the column flagged which is in the users table. This is used for preventing users who are flagged from performing transactions on the portal.","title":"Deleting, Activation and Deactivation of Agents or Admins"},{"location":"#searching-for-agent-or-user","text":"This functionality uses jquery to perform its actions.","title":"Searching For Agent or User"},{"location":"about/","text":"Non-technical Documentation Create New Agents Navigate to Add new User while logged in as an ICT STAFF and click on add new under agents. Fill in the agents details. The system should return the auto-generated username and password. Note that we expect to send this to the user mail.(Not yet implemented). Activate/Deactivate and Delete All Agents and Admins can be deactivated and deleted also. To deactivate or activate an agent or admin navigate to the respective user type, select the user(s) you wish to toggle their status and then click on the toggle online status button. For deletion of Agents and Admins, You navigate to the delete button under the respective user type and click on it.(This process permanently deletes the agent from the DB along with all their transactions histories. Caution is to be taken)","title":"Non-technical Documentation"},{"location":"about/#non-technical-documentation","text":"","title":"Non-technical Documentation"},{"location":"about/#create-new-agents","text":"Navigate to Add new User while logged in as an ICT STAFF and click on add new under agents. Fill in the agents details. The system should return the auto-generated username and password. Note that we expect to send this to the user mail.(Not yet implemented).","title":"Create New Agents"},{"location":"about/#activatedeactivate-and-delete","text":"All Agents and Admins can be deactivated and deleted also. To deactivate or activate an agent or admin navigate to the respective user type, select the user(s) you wish to toggle their status and then click on the toggle online status button. For deletion of Agents and Admins, You navigate to the delete button under the respective user type and click on it.(This process permanently deletes the agent from the DB along with all their transactions histories. Caution is to be taken)","title":"Activate/Deactivate and Delete"}]}